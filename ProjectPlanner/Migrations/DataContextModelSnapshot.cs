// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectPlanner.Data;

namespace ProjectPlanner.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("ProjectPlanner.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstimatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Herramienta para calcular los viaticos de vuelo",
                            EstimatedDate = new DateTime(2020, 3, 9, 16, 21, 14, 385, DateTimeKind.Local).AddTicks(6517),
                            Name = "Calculadora de Viaticos",
                            Status = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Herramienta para calcular los tiempos limites de vuelo",
                            EstimatedDate = new DateTime(2020, 3, 14, 16, 21, 14, 387, DateTimeKind.Local).AddTicks(2899),
                            Name = "Calculadora de Vencimiento",
                            Status = "In Progress"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2020, 3, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Herramienta para llevar el control de los proyectos",
                            EstimatedDate = new DateTime(2020, 4, 3, 16, 21, 14, 387, DateTimeKind.Local).AddTicks(3043),
                            Name = "Todo List",
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("ProjectPlanner.Models.Todo", b =>
                {
                    b.Property<int>("TodoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EstimatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("MyProperty")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.HasKey("TodoId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("ProjectPlanner.Models.Todo", b =>
                {
                    b.HasOne("ProjectPlanner.Models.Project", null)
                        .WithMany("Todos")
                        .HasForeignKey("ProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
